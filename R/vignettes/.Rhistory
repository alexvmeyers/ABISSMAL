# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of points so that you can create a legend
geom_point(data = all_sensors, aes(timestamp, y = 1, color = sensor_id), size = 0) +
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend()) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M",
limits = c()
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of points so that you can create a legend
geom_point(data = all_sensors, aes(timestamp, y = 1, color = sensor_id), size = -Inf) +
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend()) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M",
limits = c()
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of points so that you can create a legend
geom_point(data = all_sensors, aes(timestamp, y = 1, color = sensor_id), size = -Inf) +
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend()) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of points so that you can create a legend
geom_point(data = all_sensors, aes(timestamp, y = 1, color = sensor_id), size = -Inf) +
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend()) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M",
expand = c(0, 0)
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of points so that you can create a legend
geom_point(data = all_sensors, aes(timestamp, y = 1, color = sensor_id), size = -Inf) +
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend(override.aes = list(size = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), size = -Inf) +
# Set the colors that will be used to color the lines
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend(override.aes = list(linewidth = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = -Inf) +
# Set the colors that will be used to color the lines
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend(override.aes = list(linewidth = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = 0) +
# Set the colors that will be used to color the lines
scale_color_manual(values = c("blue", "orange")) +
guides(color = guide_legend(override.aes = list(linewidth = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# # Add the fake layer of lines so that you can create a legend
# geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = 0) +
#
# # Set the colors that will be used to color the lines
# scale_color_manual(values = c("blue", "orange")) +
#
# guides(color = guide_legend(override.aes = list(linewidth = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = 0) +
# Set the colors that will be used to color the lines in the legend itself
scale_color_manual(values = c("blue", "orange")) +
# Specify that you want to create a color legend, and override the linewidth of 0 above so that the lines show up in the legend
guides(color = guide_legend(override.aes = list(linewidth = 2))) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "top"
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = 0) +
# Set the colors that will be used to color the lines in the legend itself
scale_color_manual(values = c("blue", "orange")) +
# Specify that you want to create a color legend, and override the linewidth of 0 above so that the lines show up in the legend. You can also customize the legend title, otherwise it will use the column name linked to the color encoding
guides(color = guide_legend(override.aes = list(linewidth = 2), title = "Sensor type")) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "top"
)
ggplot() +
# Add a vertical line for each RFID timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = rfid_raw3,
aes(x = timestamp, xend = timestamp, y = 0, yend = 0.45),
color = "blue",
linewidth = 0.3
) +
# Add a vertical line for each beam breaker timestamp
# Use the new version of this data frame with the new day_label column
# Make sure to use the new timestamp column
geom_segment(
data = irbb_raw3,
aes(x = timestamp, xend = timestamp, y = 0.5, yend = 1),
color = "orange",
linewidth = 0.3
) +
# Add the fake layer of lines so that you can create a legend
# The argument color here must be supplied with the name of a column that is the data type "factor" in R
geom_line(data = all_sensors, aes(x = timestamp, y = 1, color = sensor_id), linewidth = 0) +
# Set the colors that will be used to color the lines in the legend itself
# The length of the vector of color values that you supply here must be the same length as the number of "levels" (or unique values) in the factor column
scale_color_manual(values = c("blue", "orange")) +
# Specify that you want to create a color legend, and override the linewidth of 0 above so that the lines show up in the legend. You can also customize the legend title, otherwise it will use the column name linked to the color encoding
guides(color = guide_legend(override.aes = list(linewidth = 2), title = "Sensor type")) +
# Facet the plot by day (e.g. create a panel per day)
# Use the new day labels here
facet_wrap(~ day_label, nrow = 2, strip.position = "left") +
# Change the x and y axis labels
xlab("Time") +
# Now you can add a y-axis label
ylab("Day of data collection") +
# Change the aesthetics of the x-axis labels
scale_x_datetime(
date_breaks = "30 mins",
date_labels = "%H:%M"
) +
# Use this function to convert the plot background to black and white
theme_bw() +
# Use aesthetics functions to remove the y-axis labels and ticks
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "top"
)
