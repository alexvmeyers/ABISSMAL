dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1),
last_indices = cumsum(rle(binary_diff)[["lengths"]]),
run_values = rle(binary_diff)[["values"]],
run_lengths = rle(binary_diff)[["lengths"]]
) %>%
dplyr::filter(run_values & run_lengths >= 2) %>%
ungroup()
glimpse(lags_runs)
lags %>%
dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1)
lags %>%
dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1),
last_indices = cumsum(rle(binary_diff)[["lengths"]]),
run_values = rle(binary_diff)[["values"]],
run_lengths = rle(binary_diff)[["lengths"]]
)
lags %>%
dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1),
last_indices = cumsum(rle(binary_diff)[["lengths"]]),
run_values = rle(binary_diff)[["values"]],
run_lengths = rle(binary_diff)[["lengths"]]
) %>%
dplyr::filter(run_values & run_lengths >= 2)
lags %>%
dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1),
last_indices = cumsum(rle(binary_diff)[["lengths"]]),
run_values = rle(binary_diff)[["values"]],
run_lengths = rle(binary_diff)[["lengths"]]
) %>%
View()
View(df)
# Check that the raw data is a data frame
if(!is.data.frame(df)){
stop('The input object needs to be a data frame')
}
# Check that the temporal threshold is a number
if(!is.numeric(threshold)){
stop('The temporal threshold needs to be numeric (in seconds)')
}
# Check that the input dataset has the column of RFID events
if(!is.null(rfid_col_nm) & !rfid_col_nm %in% names(df)){
stop('The column name specified in `rfid_col_nm` does not exist')
}
# Check that the input dataset has the PIT tag ID column
if(!is.null(tag_id_col_nm) & !tag_id_col_nm %in% names(df)){
stop('The column name specified in `tag_id_col_nm` does not exist')
}
# Check that the year, month, and day columns are also present in the data frame
if(!any(grepl("year|month|day", names(df)))){
stop('The data frame is missing columns `year`, `month`, or `day`')
}
# Check that the timestamps are in the right format
if(any(is.na(as.POSIXct(pct_df2[[rfid_col_nm]], format = "%Y-%m-%d %H:%M:%OS6")))){
stop('One or more timestamps are in the wrong format (need to be in %Y-%m-%d %H:%M:%OS6')
}
# Look for perching events by PIT tag ID and day. Otherwise the logic below ends up including the last event of a day and the first of the next day as the start and end indices, which leads to strangely long perching periods sometimes
tmp_df <- df %>%
dplyr::mutate(
date = paste(year, month, day, sep = " - ")
) %>%
group_by(date) %>%
dplyr::arrange(!!sym(rfid_col_nm), .by_group = TRUE) %>%
# Make unique row indices within groups
dplyr::mutate(
group_row_id = row_number()
) %>%
dplyr::rename(
`rfid_col` = all_of(rfid_col_nm)
)
glimpse(df)
# The lags are calculated per group in the grouped data frame
lags <- tmp_df %>%
dplyr::mutate(
shift = dplyr::lag(rfid_col, default = first(rfid_col))
) %>%
# Convert differences to boolean based on a threshold to be able to remove stretches of detection events very close together
dplyr::mutate(
diff = floor(rfid_col - shift),
#diff = round(rfid_col - shift, 4),
diff = as.numeric(diff),
binary_diff = (diff <= threshold) # Taking anything less than or equal to the threshold, see previous RFID pre-processing
) %>%
dplyr::select(date, rfid_col, diff, binary_diff) %>%
dplyr::rename(
`dates` = "date"
)
glimpse(lags)
# Make a data frame of the first and last indices of each run longer than 2 events that contain values below or equal to the given threshold
lags_runs <- lags %>%
dplyr::summarise(
first_indices = cumsum(rle(binary_diff)[["lengths"]]) - (rle(binary_diff)[["lengths"]] - 1),
last_indices = cumsum(rle(binary_diff)[["lengths"]]),
run_values = rle(binary_diff)[["values"]],
run_lengths = rle(binary_diff)[["lengths"]]
) %>%
View()
# Not sure how to otherwise remove the $value $visible list structure
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R", print = FALSE)$value
unique(pct_df3$PIT_tag_ID)
# What if instead the function is set up to take a list of data frames after grouping by PIT tag ID?
res <- pct_df3 %>%
dplyr::filter(data_type == "RFID") %>%
group_split(PIT_tag_ID) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "event_datetime_ms", tag_id_col_nm = "PIT_tag_ID")
)
# Looks great
glimpse(res)
df[[tag_col_nm]]
df
tag_id_col_nm = "PIT_tag_ID"
# Not sure how to otherwise remove the $value $visible list structure
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R", print = FALSE)$value
unique(pct_df3$PIT_tag_ID)
# What if instead the function is set up to take a list of data frames after grouping by PIT tag ID?
res <- pct_df3 %>%
dplyr::filter(data_type == "RFID") %>%
group_split(PIT_tag_ID) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "event_datetime_ms", tag_id_col_nm = "PIT_tag_ID")
)
# Not sure how to otherwise remove the $value $visible list structure
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R", print = FALSE)$value
unique(pct_df3$PIT_tag_ID)
# What if instead the function is set up to take a list of data frames after grouping by PIT tag ID?
res <- pct_df3 %>%
dplyr::filter(data_type == "RFID") %>%
group_split(PIT_tag_ID) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "event_datetime_ms", tag_id_col_nm = "PIT_tag_ID")
)
# Looks great
glimpse(res)
View(res)
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R")
start <- as.POSIXct("2023-01-01")
interval <- 1
end <- start + as.difftime(1, units = "hours")
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R")
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R")$value
start <- as.POSIXct("2023-01-01")
interval <- 1
end <- start + as.difftime(1, units = "hours")
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
seq(from = start, by = interval, to = end)
glimpse(res)
start
end
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + as.difftime(1, units = "hours")
start
end
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + as.difftime(1, units = "hours")
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
interval
seq(from = start, by = interval, to = end)
seq(from = (end + 60), by = interval, to = end + 120)
seq(from = start, by = interval, to = end)
seq(from = (end + 60), by = interval, to = end + 120)
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + as.difftime(1, units = "hours")
tstmps_1 <- seq(from = start, by = interval, to = start + 120)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + as.difftime(1, units = "hours")
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
head(tstmps_2)
head(tstmps_3)
seq(from = start, by = interval, to = end)
head(tstmps_1)
tail(tstmps_1)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
View(res)
start - end
seconds(start - end)
end <- start + as.difftime(1, units = "seconds")
seconds(start - end)
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 120
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
tail(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
tail(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id")
)
glimpse(res)
View(res)
# Not sure how to otherwise remove the $value $visible list structure
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R", print = FALSE)$value
unique(pct_df3$PIT_tag_ID)
# What if instead the function is set up to take a list of data frames after grouping by PIT tag ID?
res <- pct_df3 %>%
dplyr::filter(data_type == "RFID") %>%
group_split(PIT_tag_ID) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "event_datetime_ms", tag_id_col_nm = "PIT_tag_ID", run_length = 2)
)
# Looks great
glimpse(res)
# Not sure how to otherwise remove the $value $visible list structure
find_rfid_perching_events <- source("/home/gsvidaurre/Desktop/GitHub_repos/Abissmal/R/find_rfid_perching_events.R", print = FALSE)$value
unique(pct_df3$PIT_tag_ID)
# What if instead the function is set up to take a list of data frames after grouping by PIT tag ID?
res <- pct_df3 %>%
dplyr::filter(data_type == "RFID") %>%
group_split(PIT_tag_ID) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "event_datetime_ms", tag_id_col_nm = "PIT_tag_ID", run_length = 2)
)
# Looks great
glimpse(res)
View(res)
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
head(tstmps_1)
tail(tstmps_1)
head(tstmps_2)
head(tstmps_3)
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
glimpse(test_df)
head(test_df)
res <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
glimpse(res)
test_that("Check number of perching events detected", {
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
res_df <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
expect_identical(nrow(res_df), 3)
})
if (!require(testthat)) install.packages('testthat')
library(testthat)
test_that("Check number of perching events detected", {
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
res_df <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
expect_identical(nrow(res_df), 3)
})
test_that("Check number of perching events detected", {
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
res_df <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
expect_equal(nrow(res_df), 3)
})
test_that("Check number of perching events detected", {
X <- c("tidyverse", "plyr", "dplyr", "data.table")
invisible(lapply(X, library, character.only = TRUE))
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
res_df <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
expect_equal(nrow(res_df), 3)
})
test_that("Check number of perching events detected", {
# Avoid library calls and other changes to the virtual environment
# See https://r-pkgs.org/testing-design.html
withr::local_package("tidyverse")
withr::local_package("plyr")
withr::local_package("dplyr")
withr::local_package("data.table")
start <- as.POSIXct("2023-01-01 01:00:00 EST")
interval <- 1
end <- start + 240
# 3 separate perching events (e.g. stretches of detections 1 second apart) separated by gaps of 1 minute
tstmps_1 <- seq(from = start, by = interval, to = end)
tstmps_2 <- seq(from = (end + 60), by = interval, to = end + 120)
tstmps_3 <- seq(from = (end + 120 + 60), by = interval, to = end + 240)
test_df <- data.frame(RFID = c(tstmps_1, tstmps_2, tstmps_3)) %>%
dplyr::mutate(
year = year(start),
month = month(start),
day = day(start),
tag_id = "01-02-03-AA-BB-CC"
)
res_df <- test_df %>%
group_split(tag_id) %>%
map_dfr(
~ find_rfid_perching_events(df = .x, threshold = 1, rfid_col_nm = "RFID", tag_id_col_nm = "tag_id", run_length = 2)
)
expect_equal(nrow(res_df), 3)
})
